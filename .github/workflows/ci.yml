name: CI
on:
  push:
    branches:
      - "*"

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  stylecheck:
    name: Stylecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain with rustfmt and run cargo format in check mode
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - run: cargo fmt --all -- --check

  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        ocaml-compiler: ["4.14.0"]

    name: Test
    runs-on: ${{ matrix.os }}
    needs: stylecheck
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install z3, GMP (apt)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install z3 libgmp-dev

      - name: Install z3, GMP (homebrew)
        if: matrix.os == 'macos-latest'
        run: brew install z3 gmp

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            _opam
            ~/.opam
            target
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.ocaml-compiler }}

      - name: Install OCaml toolchain
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Set Opam env
        run: opam env | tr '\n' ' ' >> $GITHUB_ENV

      - name: Add Opam switch to PATH
        run: opam var bin >> $GITHUB_PATH

      - name: Install Opam dependencies
        # ignore failures if already installed
        run: opam install sail || true

      - name: Build
        run: cargo build --release --examples --tests

      - name: Test
        run: cargo test --release --no-fail-fast

      - name: Build Documentation
        run: cargo doc --all --no-deps

      - name: Upload artifact
        if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./target/doc

  deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
