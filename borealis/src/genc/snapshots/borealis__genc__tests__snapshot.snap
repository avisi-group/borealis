---
source: borealis/src/genc/mod.rs
expression: "format!(\"main.genc:\\n{}\\n\\n\\nisa.genc:\\n{}\\n\\n\\nexecute.genc:\\n{}\\n\\n\\nbehaviours.genc:\\n{}\\n\\n\\n\",\n    main, isa, execute, behaviours)"
---
main.genc:
/* GENERATED BY BOREALIS */


AC_ARCH(aarch64)
{
	ac_mem Data(64, 64, little, 0);
	ac_mem Fetch(64, 64, little, 1);

	ac_wordsize 64;

	ac_regspace(248) {
		bank RBX (uint64, 0, 31, 8, 1, 8, 8);
		bank RBW (uint32, 0, 31, 8, 1, 4, 4);
	}
	ac_regspace(16) {
		slot PC (uint64, 8, 0) PC;
	}

	ARCH_CTOR(arm) {
		ac_isa("isa.genc");
		set_endian("little");
	};
};



isa.genc:
/* GENERATED BY BOREALIS */


AC_ISA(aarch64)
{
	ac_fetchsize 32;
	ac_predicated "no";
	ac_format fmt_addi = "%sf:1 %op:1 %S:1 0x11:5 %shift:2 %imm12:12 %rn:5 %rd:5";
	ac_instr<fmt_addi> addi;
	ac_behaviour addi;

	ISA_CTOR(arm) {
		addi.set_behaviour(addi);
		ac_behaviours("behaviours.genc");
		ac_execute("execute.genc");
	};
};



execute.genc:
/* GENERATED BY BOREALIS */


execute(addi) {
return;
}




behaviours.genc:
/* GENERATED BY BOREALIS */


behaviour(custom) {
return;
}

behaviour(handle_exception) {

}

behaviour(reset) {

}

behaviour(irq) {

}

behaviour(mmu_fault) {

}

behaviour(page_fault) {

}

behaviour(undefined_instruction) {

}

behaviour(single_step) {

}

behaviour(undef) {

}





